"use client"

import { useState } from "react"
import "./ContactForm.css"

export default function ContactForm() {
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    subject: "",
    message: "",
  })

  const [isSubmitting, setIsSubmitting] = useState(false)
  const [submitStatus, setSubmitStatus] = useState("")

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value,
    })
  }

  const handleSubmit = (e) => {
    e.preventDefault()
    setIsSubmitting(true)

    // Simulate form submission
    setTimeout(() => {
      setIsSubmitting(false)
      setSubmitStatus("success")
      setFormData({ name: "", email: "", subject: "", message: "" })

      setTimeout(() => {
        setSubmitStatus("")
      }, 3000)
    }, 1500)
  }

  return (
    <div className="contact-wrapper">
      <div className="container">
        <div className="row justify-content-center">
          <div className="col-lg-8 col-md-10">
            <div className="contact-form-container">
              <div className="text-center mb-5">
                <h2 className="contact-title">Get In Touch</h2>
                <p className="contact-subtitle">
                  We'd love to hear from you. Send us a message and we'll respond as soon as possible.
                </p>
              </div>

              {submitStatus === "success" && (
                <div className="alert alert-success success-message" role="alert">
                  <span className="contact-icon icon-check me-2"></span>
                  Thank you! Your message has been sent successfully.
                </div>
              )}

              <form onSubmit={handleSubmit} className="contact-form">
                <div className="row">
                  <div className="col-md-6 mb-4">
                    <div className="form-group">
                      <label htmlFor="name" className="form-label">
                        Full Name <span className="required">*</span>
                      </label>
                      <input
                        type="text"
                        className="form-control"
                        id="name"
                        name="name"
                        value={formData.name}
                        onChange={handleChange}
                        required
                        placeholder="Enter your full name"
                      />
                    </div>
                  </div>
                  <div className="col-md-6 mb-4">
                    <div className="form-group">
                      <label htmlFor="email" className="form-label">
                        Email Address <span className="required">*</span>
                      </label>
                      <input
                        type="email"
                        className="form-control"
                        id="email"
                        name="email"
                        value={formData.email}
                        onChange={handleChange}
                        required
                        placeholder="Enter your email address"
                      />
                    </div>
                  </div>
                </div>

                <div className="mb-4">
                  <div className="form-group">
                    <label htmlFor="subject" className="form-label">
                      Subject <span className="required">*</span>
                    </label>
                    <input
                      type="text"
                      className="form-control"
                      id="subject"
                      name="subject"
                      value={formData.subject}
                      onChange={handleChange}
                      required
                      placeholder="What's this about?"
                    />
                  </div>
                </div>

                <div className="mb-4">
                  <div className="form-group">
                    <label htmlFor="message" className="form-label">
                      Message <span className="required">*</span>
                    </label>
                    <textarea
                      className="form-control"
                      id="message"
                      name="message"
                      rows="6"
                      value={formData.message}
                      onChange={handleChange}
                      required
                      placeholder="Tell us more about your inquiry..."
                    ></textarea>
                  </div>
                </div>

                <div className="text-center">
                  <button type="submit" className="btn btn-primary submit-btn" disabled={isSubmitting}>
                    {isSubmitting ? (
                      <>
                        <span className="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                        Sending...
                      </>
                    ) : (
                      <>
                        <span className="icon-send me-2"></span>
                        Send Message
                      </>
                    )}
                  </button>
                </div>
              </form>

              <div className="contact-info mt-5">
                <div className="row text-center">
                  <div className="col-md-4 mb-3">
                    <div className="contact-info-item">
                      <span className="contact-icon icon-email"></span>
                      <h6>Email</h6>
                      <p>hello@example.com</p>
                    </div>
                  </div>
                  <div className="col-md-4 mb-3">
                    <div className="contact-info-item">
                      <span className="contact-icon icon-phone"></span>
                      <h6>Phone</h6>
                      <p>+1 (555) 123-4567</p>
                    </div>
                  </div>
                  <div className="col-md-4 mb-3">
                    <div className="contact-info-item">
                      <span className="contact-icon icon-location"></span>
                      <h6>Address</h6>
                      <p>123 Main St, City, State</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}


/* Import Bootstrap CSS */
@import url("https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css");
/* Import Google Fonts */
@import url("https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap");

* {
  font-family: "Inter", sans-serif;
}

.contact-wrapper {
  min-height: 100vh;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  padding: 60px 0;
  position: relative;
}

.contact-wrapper::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="75" cy="75" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="50" cy="10" r="0.5" fill="rgba(255,255,255,0.1)"/><circle cx="10" cy="60" r="0.5" fill="rgba(255,255,255,0.1)"/><circle cx="90" cy="40" r="0.5" fill="rgba(255,255,255,0.1)"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
  opacity: 0.3;
}

.contact-form-container {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(20px);
  border-radius: 24px;
  padding: 50px;
  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
  border: 1px solid rgba(255, 255, 255, 0.2);
  position: relative;
  z-index: 1;
}

.contact-title {
  font-size: 2.5rem;
  font-weight: 700;
  color: #2d3748;
  margin-bottom: 15px;
  position: relative;
}

.contact-title::after {
  content: "";
  position: absolute;
  bottom: -10px;
  left: 50%;
  transform: translateX(-50%);
  width: 60px;
  height: 4px;
  background: linear-gradient(90deg, #667eea, #764ba2);
  border-radius: 2px;
}

.contact-subtitle {
  font-size: 1.1rem;
  color: #718096;
  font-weight: 400;
  line-height: 1.6;
}

.form-label {
  font-weight: 600;
  color: #2d3748;
  margin-bottom: 8px;
  font-size: 0.95rem;
}

.required {
  color: #e53e3e;
}

.form-control {
  border: 2px solid #e2e8f0;
  border-radius: 12px;
  padding: 15px 18px;
  font-size: 1rem;
  transition: all 0.3s ease;
  background: #f7fafc;
  box-shadow: none;
}

.form-control:focus {
  border-color: #667eea;
  box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
  background: #ffffff;
  outline: none;
}

.form-control::placeholder {
  color: #a0aec0;
  font-weight: 400;
}

textarea.form-control {
  resize: vertical;
  min-height: 140px;
}

.submit-btn {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  border: none;
  border-radius: 12px;
  padding: 15px 40px;
  font-size: 1.1rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  transition: all 0.3s ease;
  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
  position: relative;
  overflow: hidden;
}

.submit-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 12px 35px rgba(102, 126, 234, 0.4);
  background: linear-gradient(135deg, #5a67d8 0%, #6b46c1 100%);
}

.submit-btn:active {
  transform: translateY(0);
}

.submit-btn:disabled {
  opacity: 0.7;
  cursor: not-allowed;
  transform: none;
}

.success-message {
  border: none;
  background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);
  color: white;
  border-radius: 12px;
  padding: 15px 20px;
  font-weight: 500;
  box-shadow: 0 8px 25px rgba(72, 187, 120, 0.3);
  animation: slideInDown 0.5s ease;
}

@keyframes slideInDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.contact-info {
  border-top: 1px solid #e2e8f0;
  padding-top: 40px;
  margin-top: 40px;
}

.contact-info-item {
  padding: 20px;
  transition: all 0.3s ease;
  border-radius: 12px;
}

.contact-info-item:hover {
  background: #f7fafc;
  transform: translateY(-5px);
}

.contact-icon {
  font-size: 2rem;
  color: #667eea;
  margin-bottom: 15px;
  display: block;
  font-weight: normal;
}

.contact-info-item h6 {
  font-weight: 600;
  color: #2d3748;
  margin-bottom: 8px;
  font-size: 1rem;
}

.contact-info-item p {
  color: #718096;
  margin: 0;
  font-size: 0.95rem;
}

.spinner-border-sm {
  width: 1rem;
  height: 1rem;
}

/* Custom icons using CSS */
.icon-check::before {
  content: "✓";
  font-weight: bold;
}

.icon-send::before {
  content: "✈";
  font-weight: normal;
}

.icon-email::before {
  content: "✉";
  font-weight: normal;
}

.icon-phone::before {
  content: "☎";
  font-weight: normal;
}

.icon-location::before {
  content: "📍";
  font-weight: normal;
}

/* Responsive Design */
@media (max-width: 768px) {
  .contact-form-container {
    padding: 30px 25px;
    margin: 20px;
  }

  .contact-title {
    font-size: 2rem;
  }

  .contact-subtitle {
    font-size: 1rem;
  }

  .submit-btn {
    width: 100%;
    padding: 18px;
  }
}

@media (max-width: 576px) {
  .contact-wrapper {
    padding: 30px 0;
  }

  .contact-form-container {
    padding: 25px 20px;
    margin: 10px;
    border-radius: 16px;
  }

  .contact-title {
    font-size: 1.8rem;
  }
}

/* Form Animation */
.form-group {
  position: relative;
  animation: fadeInUp 0.6s ease forwards;
  opacity: 0;
}

.form-group:nth-child(1) {
  animation-delay: 0.1s;
}
.form-group:nth-child(2) {
  animation-delay: 0.2s;
}
.form-group:nth-child(3) {
  animation-delay: 0.3s;
}
.form-group:nth-child(4) {
  animation-delay: 0.4s;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Focus states for accessibility */
.form-control:focus,
.submit-btn:focus {
  outline: 2px solid #667eea;
  outline-offset: 2px;
}

/* Custom scrollbar for textarea */
.form-control::-webkit-scrollbar {
  width: 8px;
}

.form-control::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 4px;
}

.form-control::-webkit-scrollbar-thumb {
  background: #c1c1c1;
  border-radius: 4px;
}

.form-control::-webkit-scrollbar-thumb:hover {
  background: #a8a8a8;
}
